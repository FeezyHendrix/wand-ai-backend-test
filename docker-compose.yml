version: "3.9"

services:
  db:
    image: postgres:15
    container_name: kb-postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: knowledge_base
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    container_name: kb-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  ollama:
    image: ollama/ollama:latest
    container_name: kb-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  ollama-init:
    image: ollama/ollama:latest
    container_name: kb-ollama-init
    depends_on:
      ollama:
        condition: service_healthy
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=http://ollama:11434
    entrypoint: ["sh", "-c"]
    command: >
      "sleep 5 &&
       ollama pull llama3.2:1b &&
       echo 'Model llama3.2:1b pulled successfully'"
    restart: "no"

  api:
    build: .
    container_name: kb-api
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      ollama:
        condition: service_healthy
      ollama-init:
        condition: service_completed_successfully
    environment:
      DATABASE_URL: postgresql+asyncpg://user:password@db:5432/knowledge_base
      REDIS_URL: redis://redis:6379
      OLLAMA_BASE_URL: http://ollama:11434
      OLLAMA_MODEL: llama3.2:1b
      CHROMA_PERSIST_DIRECTORY: /app/chroma_db
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    volumes:
      - ./app:/app/app
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini
      - chroma_data:/app/chroma_db
      - uploads:/app/uploads
      - documents:/app/documents
    ports:
      - "8000:8000"
    command: /bin/sh -c "poetry run alembic upgrade head && poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000"

volumes:
  db_data:
  redis_data:
  chroma_data:
  uploads:
  documents:
  ollama_data:
